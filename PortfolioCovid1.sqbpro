<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="test.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser query" current="2"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="5340"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="CovidDeathstest" custom_title="0" dock_id="1" table="4,15:mainCovidDeathstest"/><dock_state state="000000ff00000000fd0000000100000002000003e7000002cdfc0100000001fc00000000000003e70000013c00fffffffa000000000100000002fb000000160064006f0063006b00420072006f00770073006500310100000000ffffffff0000013c00fffffffb000000160064006f0063006b00420072006f00770073006500320000000000ffffffff0000000000000000000002e20000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="CovidDeathstest" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="66"/><column index="2" value="70"/><column index="3" value="70"/><column index="4" value="69"/><column index="5" value="77"/><column index="6" value="83"/><column index="7" value="79"/><column index="8" value="90"/><column index="9" value="86"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PercentPopulationVaccinated" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="70"/><column index="2" value="70"/><column index="3" value="69"/><column index="4" value="77"/><column index="5" value="124"/><column index="6" value="168"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1*">
--Covert data type by creating a new table

CREATE Table TestNew (
   iso_code TEXT  , continent TEXT, location TEXT, date DATE, population INTEGER, total_cases INTEGER, 
   new_cases INTEGER, total_deaths INTEGER , new_deaths INTEGER);
  
  INSERT INTO TestNew(iso_code, continent, location, date, population, total_cases, new_cases, total_deaths, new_deaths)
  SELECT 
             iso_code , continent, location, DATE(date), population, total_cases, new_cases,
             CAST( total_deaths AS INTEGER), CAST (new_deaths AS INTEGER) 
   FROM CovidDeathstest;
  
   ALTER Table TestNew ;

  /* Select * FROM TestNew 
   SELECT Datetime ('now')
   Drop table TestNew
  Select Date('2020-02-24')
  
   
select * FROM CovidDeathstest */

Select location, date, total_cases, new_cases, total_deaths, population From TestNew
Order by 1, 2

--Total cases VS total dealth
Select location, date, total_cases, total_deaths, (CAST(total_deaths AS real)/ total_cases)*100 as DeathPercentage
From TestNew
Where location like '%states%'
Order by 1, 2

--Total cases VS population
--Shows what percentage of population got Covid

Select location, date, population,total_cases,  (CAST(total_cases AS real)/ population)*100 as PercentagePopulationInfected
From TestNew
Where location like '%states%'
Order by 1, 2

--Countries with highest infection rate campare to population

Select location , population, Max(total_cases) AS HighestInfectioncount,  MAX((CAST(total_cases AS real)/ population))*100 as PercentagePopulationInfected
From TestNew
Group by 1, 2
Order by 4 Desc

--Countries with highest death rate per population

Select location , population, Max(total_deaths) AS TotalDeathcount,  MAX((CAST(total_deaths AS real)/ population))*100 as DeathperPopulation
From TestNew
Where continent is not NULL
Group by 1, 2
Order by 3 Desc

-- Breaking things down by continent
--Continents with the highest death count per population

Select continent , Max(total_deaths) AS TotalDeathcount
From TestNew
Where continent is  not NULL
Group by 1
Order by 2 Desc

--Globe numbers
--Total numbers by date

Select date, Sum(new_cases) as total_cases, Sum (new_deaths) as total_deaths,
 (Sum(Cast(new_deaths as real))/ Sum(new_cases))*100 as DeathPercentage
From TestNew
Where continent is  not NULL
Group by 1
Order by 2 Desc

--Total numbers

Select Sum(new_cases) as total_cases, Sum (new_deaths) as total_deaths,
 (Sum(Cast(new_deaths as real))/ Sum(new_cases))*100 as DeathPercentage
From TestNew
Where continent is  not NULL

Order by 1,  2 Desc

--Total population VS Vaccinations
--Join CovidVaccinations1 tables to CovidDeaths 



SELECT dea. continent, dea. location, dea.date, dea.population, vac. new_vaccinations,
 Sum(CAST (vac. new_vaccinations as INTEGER)) OVER (PARTITION by dea.location ORDER by dea. location, dea. date) as RollingPeopleVaccinated
 -- (RollingPeopleVaccinated)/dea.population)*100
from TestNew dea
Join CovidVaccinations1 vac On
     dea. location = vac. location
	 and dea. date = vac. date
Where dea.continent is  not NULL

Order by  2 , 3 

--Use CTE 

With PopVsVac (continent, location, date, population, new_vaccinations, RollingPeopleVaccinated)
AS (
SELECT dea. continent, dea. location, dea.date, dea.population, vac. new_vaccinations,
 Sum(CAST (vac. new_vaccinations as INTEGER)) OVER (PARTITION by dea.location ORDER by dea. location, dea. date) as RollingPeopleVaccinated
 -- (RollingPeopleVaccinated)/dea.population)*100
from TestNew dea
Join CovidVaccinations1 vac On
     dea. location = vac. location
	 and dea. date = vac. date
Where dea.continent is  not NULL

--Order by  2 , 3 
)
Select *, (RollingPeopleVaccinated/ Cast(population as Real))*100 as RollingPeopleVaccinatedPerPopulation
From PopVsVac


--Create temporary TABLE
/*
CREATE TEMP Table PercentPopulationVaccinated
(
  continent TEXT,
  location  TEXT,
  date datetime,
  population numeric,
  new_vaccinations numeric,
  RollingPeopleVaccinated NUMERIC
  )
  INSERT INTO PercentPopulationVaccinated(continent, location, date, population, new_vaccinations, RollingPeopleVaccinated)
  SELECT dea. continent, dea. location, dea.date, dea.population, vac. new_vaccinations,
 Sum(CAST (vac. new_vaccinations as INTEGER)) OVER (PARTITION by dea.location ORDER by dea. location, dea. date) as RollingPeopleVaccinated
 -- (RollingPeopleVaccinated)/dea.population)*100
from TestNew dea
Join CovidVaccinations1 vac On
     dea. location = vac. location
	 and dea. date = vac. date
Where dea.continent is  not NULL

Select *, (RollingPeopleVaccinated/ Cast(population as Real))*100 as RollingPeopleVaccinatedPerPopulation
From  PercentPopulationVaccinated

*/
--Drop table Combined_Temp if  EXISTS


--Creating View to store data for later visulizations

Create View PercentPopulationVaccinated as

  SELECT dea. continent, dea. location, dea.date, dea.population, vac. new_vaccinations,
 Sum(CAST (vac. new_vaccinations as INTEGER)) OVER (PARTITION by dea.location ORDER by dea. location, dea. date) as RollingPeopleVaccinated
 -- (RollingPeopleVaccinated)/dea.population)*100
from TestNew dea
Join CovidVaccinations1 vac On
     dea. location = vac. location
	 and dea. date = vac. date
Where dea.continent is  not NULL


SELECT * FROM PercentPopulationVaccinated









</sql><current_tab id="0"/></tab_sql></sqlb_project>
